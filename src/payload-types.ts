/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    products: Product;
    media: Media;
    product_file: ProductFile;
    orders: Order;
    reviews: Review;
    user_details: UserDetail;
    resellers: Reseller;
    newsletters: Newsletter;
    reseller_products: ResellerProduct;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  username: string;
  role?: ('admin' | 'reseller' | 'customer') | null;
  lastLogin?: string | null;
  passwordChanged?: string | null;
  usernameChanged?: string | null;
  emailChanged?: string | null;
  twoFASecret?: string | null;
  twoFAExpires?: string | null;
  isTwoFAEnabled?: boolean | null;
  twoFAToggled?: string | null;
  details?: (string | UserDetail)[] | null;
  resellerStore?: string | null;
  hwidReset?: boolean | null;
  hwidResetTime?: string | null;
  hwidDisableUntil?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user_details".
 */
export interface UserDetail {
  id: string;
  ip?: string | null;
  hostname?: string | null;
  city?: string | null;
  region?: string | null;
  country?: string | null;
  loc?: string | null;
  org?: string | null;
  postal?: string | null;
  timezone?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  user?: (string | null) | User;
  name: string;
  description?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  price: number;
  category: 'rainbow_six_full' | 'cs2' | 'valorant' | 'apex' | 'fortnite' | 'rust' | 'rainbow_six_lite';
  product_files: string | ProductFile;
  level?: string | null;
  expiry?: string | null;
  approvedForSale?: ('pending' | 'approved' | 'denied') | null;
  priceId?: string | null;
  stripeId?: string | null;
  images: {
    image: string | Media;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product_file".
 */
export interface ProductFile {
  id: string;
  user?: (string | null) | User;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  user?: (string | null) | User;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: string;
  _isPaid: boolean;
  user: string | User;
  products: (string | Product)[];
  licenseKey?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews".
 */
export interface Review {
  id: string;
  user?: (string | null) | User;
  rating: number;
  description: string;
  featured?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "resellers".
 */
export interface Reseller {
  id: string;
  logo: string;
  name: string;
  discord?: string | null;
  telegram?: string | null;
  website: string;
  username: string;
  payments?:
    | {
        method: string;
        icon: string;
        color: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsletters".
 */
export interface Newsletter {
  id: string;
  email: string;
  username?: string | null;
  deleted?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reseller_products".
 */
export interface ResellerProduct {
  id: string;
  user?: (string | null) | User;
  name: string;
  price: number;
  category: 'rainbow_six_full' | 'cs2' | 'valorant' | 'apex' | 'fortnite' | 'rust' | 'rainbow_six_lite';
  level?: string | null;
  expiry?: string | null;
  approvedForSale?: ('pending' | 'approved' | 'denied') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}